name: Deploy to ECS (Reusable)

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment for the workflow'
        required: true
        type: string
      image:
        description: 'The image that I want to deploy in ECS'
        required: true
        type: string
      environment_variables:
        description: "Custom environment variables for the ECS task definition"
        required: true
        type: string

jobs:
  deploy_to_ecs:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Print received image input
        run: |
          echo "🧩 Received image input: ${{ inputs.image }}"
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug image
        run: |
          echo "🔍 Debugging image..."
          echo "Image=${{ inputs.image }}" >> $GITHUB_OUTPUT

      - name: Download and clean existing ECS task definition
        id: fetch-task
        run: |
          aws ecs describe-task-definition \
              --task-definition ${{ vars.TASK_DEFINITION }} \
              --region ${{ vars.AWS_REGION }} \
              --query 'taskDefinition' \
              --output json > taskdef.json

          jq 'del(
              .taskDefinitionArn,
              .revision,
              .status,
              .requiresAttributes,
              .compatibilities,
              .registeredAt,
              .registeredBy
          )' taskdef.json > taskdef-clean.json
  
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: taskdef-clean.json
          container-name: ${{ vars.CONTAINER_NAME }}
          image: ${{ inputs.image }}
          environment-variables: ${{ inputs.environment_variables }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Cleanup task definition files
        run: rm -f taskdef.json taskdef-clean.json